warning: unused import: `Float`
 --> src/main.rs:1:11
  |
1 | use num::{Float, Integer};
  |           ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `cyclic-scheduler` (bin "cyclic-scheduler") generated 1 warning
    Finished `release` profile [optimized] target(s) in 0.07s
     Running `target/release/cyclic-scheduler input-1.txt`
[src/main.rs:81:5] base = 10
[src/main.rs:9:5] &tasks = [
    Task {
        name: "t1",
        computing_time: 10,
        period: 50,
    },
    Task {
        name: "t2",
        computing_time: 20,
        period: 50,
    },
    Task {
        name: "t3a",
        computing_time: 20,
        period: 100,
    },
    Task {
        name: "t3b",
        computing_time: 14,
        period: 100,
    },
]
[src/main.rs:10:23] utilization(tasks) = 0.9400000000000001
[src/main.rs:15:23] hyperperiod(tasks) = 100
Found secondary period for k = 5; period = 20
Found secondary period for k = 4; period = 25
Found secondary period for k = 2; period = 50

For Ts = 20
2 * 20 - gcd(20,50) <= 50 = 30 <= 50; true
2 * 20 - gcd(20,50) <= 50 = 30 <= 50; true
2 * 20 - gcd(20,100) <= 100 = 20 <= 100; true
2 * 20 - gcd(20,100) <= 100 = 20 <= 100; true

For Ts = 25
2 * 25 - gcd(25,50) <= 50 = 25 <= 50; true
2 * 25 - gcd(25,50) <= 50 = 25 <= 50; true
2 * 25 - gcd(25,100) <= 100 = 25 <= 100; true
2 * 25 - gcd(25,100) <= 100 = 25 <= 100; true

For Ts = 50
2 * 50 - gcd(50,50) <= 50 = 50 <= 50; true
2 * 50 - gcd(50,50) <= 50 = 50 <= 50; true
2 * 50 - gcd(50,100) <= 100 = 50 <= 100; true
2 * 50 - gcd(50,100) <= 100 = 50 <= 100; true

[src/main.rs:16:23] frame_times(tasks, hyperperiod) = [
    20,
    25,
    50,
]
Schedule(frame_time = 20):
  [Frame 0]
  t1: {
    activation: 0,
    deadline: 50,
    start: 0
  }

  [Frame 1]
  t2: {
    activation: 0,
    deadline: 50,
    start: 20
  }

  [Frame 2]
  t3a: {
    activation: 0,
    deadline: 100,
    start: 40
  }

  [Frame 3]
  t1: {
    activation: 50,
    deadline: 100,
    start: 60
  }

  [Frame 4]
  t2: {
    activation: 50,
    deadline: 100,
    start: 80
  }

  [Frame 5]
  t3b: {
    activation: 0,
    deadline: 100,
    start: 100
  }

Schedule(frame_time = 25):
  [Frame 0]
  t1: {
    activation: 0,
    deadline: 50,
    start: 0
  }
  t3b: {
    activation: 0,
    deadline: 100,
    start: 10
  }

  [Frame 1]
  t2: {
    activation: 0,
    deadline: 50,
    start: 25
  }

  [Frame 2]
  t1: {
    activation: 50,
    deadline: 100,
    start: 50
  }

  [Frame 3]
  t2: {
    activation: 50,
    deadline: 100,
    start: 75
  }

  [Frame 4]
  t3a: {
    activation: 0,
    deadline: 100,
    start: 100
  }

Schedule(frame_time = 50):
  [Frame 0]
  t1: {
    activation: 0,
    deadline: 50,
    start: 0
  }
  t2: {
    activation: 0,
    deadline: 50,
    start: 10
  }
  t3a: {
    activation: 0,
    deadline: 100,
    start: 30
  }

  [Frame 1]
  t1: {
    activation: 50,
    deadline: 100,
    start: 50
  }
  t2: {
    activation: 50,
    deadline: 100,
    start: 60
  }
  t3b: {
    activation: 0,
    deadline: 100,
    start: 80
  }

  [Frame 2]

